services:
  postgres:
    image: postgres:15
    container_name: fitvision-postgres
    environment:
      POSTGRES_DB: fitvisiondatabase
      POSTGRES_USER: fitvisionuser
      POSTGRES_PASSWORD: fitvisionpass
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256 --auth-local=scram-sha-256"
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fitvisionuser -d fitvisiondatabase"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  redis:
    image: redis:7.2.1
    container_name: fitvision-redis
    command: ["redis-server", "--appendonly", "yes"]
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      retries: 5

  backend:
    build: ./FitVision_backend
    container_name: fitvision-backend
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/fitvisiondatabase
      SPRING_DATASOURCE_USERNAME: fitvisionuser
      SPRING_DATASOURCE_PASSWORD: fitvisionpass
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
      SPRING_JPA_DATABASE_PLATFORM: org.hibernate.dialect.PostgreSQLDialect
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      SPRING_CACHE_TYPE: redis
      FASTAPI_BASE_URL: http://fastapi:8000
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      fastapi:
        condition: service_started
    restart: on-failure

  frontend:
    build: ./fitvision_frontend
    container_name: fitvision-frontend
    ports:
      - "3000:80"
    depends_on:
      - backend

  fastapi:
    build: ./Fitivsion_Ai
    container_name: fitvision-fastapi
    ports:
      - "8000:8000"
    environment:
      GOOGLE_API_KEY: ${GOOGLE_API_KEY} # Add this line
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/docs"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  postgres-data:
  redis-data:
